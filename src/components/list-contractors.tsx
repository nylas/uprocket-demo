/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/q4shW7ZZrtB
 */
import { Avatar, AvatarImage } from "@/components/ui/avatar";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardFooter,
  CardHeader,
} from "@/components/ui/card";
import { useContractors } from "@/lib/hooks";
import { useRouter } from "next/router";
import { Header } from "./header";

export function ListContractors() {
  const router = useRouter();
  const { contractors } = useContractors();
  return (
    <div className="flex flex-col min-h-screen bg-white">
      <Header />
      <div className="max-w-7xl p-[48px] mx-auto px-6 sm:px-6 lg:px-8">
        {!contractors?.length && (
          <div className="flex mt-6">
            <div className="flex flex-col items-center justify-center w-full">
              <h3 className="text-2xl font-semibold text-gray-600">
                No contractors found
              </h3>
              <p className="text-gray-500">
                We couldn&apos;t find any contractors matching your search.
              </p>
            </div>
          </div>
        )}
        {contractors?.map((contractor) => (
          <div className="flex mt-6" key={contractor.uid}>
            <Card className="w-full">
              <CardHeader>
                <div className="flex items-center space-x-4">
                  <Avatar>
                    {!contractor.picture && (
                      <AvatarImage
                        alt="Profile picture"
                        src="/placeholder.svg?height=40&width=40"
                      />
                    )}
                    {contractor.picture && (
                      <AvatarImage
                        alt="Profile picture"
                        src={`${contractor.picture}?height=40&width=40`}
                      />
                    )}
                  </Avatar>
                  <div className="ml-4">
                    <h4 className="text-lg font-semibold">{contractor.name}</h4>
                    <h5 className="text-sm text-gray-500">
                      {contractor.title}
                    </h5>
                  </div>
                </div>
              </CardHeader>
              <CardContent>
                <div className="flex items-center text-sm space-x-2 mb-2">
                  <Badge
                    className="bg-blue-100 text-blue-600"
                    variant="secondary"
                  >
                    {contractor.success_rate}% Job Success
                  </Badge>
                  <Badge
                    className="bg-apple-100 text-apple-600"
                    variant="secondary"
                  >
                    Available Now
                  </Badge>
                </div>
                <div className="flex flex-wrap gap-2 mb-4">
                  {contractor.skills?.slice(0, 6).map((skill) => (
                    <Badge variant="outline" key={skill}>
                      {skill}
                    </Badge>
                  ))}
                  {contractor.skills?.length > 6 && (
                    <Button className="text-blue-600" variant="ghost">
                      +{contractor.skills?.length - 6} more
                    </Button>
                  )}
                </div>
                <p className="text-gray-600 text-sm">
                  {contractor.about?.substring(0, 200)}
                  {contractor.about?.length > 200 && "..."}
                </p>
              </CardContent>
              <CardFooter className="flex justify-end">
                <Button
                  className="bg-apple-600 text-white px-4 py-2 rounded"
                  onClick={() => {
                    router.push(`/contractor/${contractor.uid}`);
                  }}
                >
                  View Profile
                </Button>
              </CardFooter>
            </Card>
          </div>
        ))}
      </div>
    </div>
  );
}
